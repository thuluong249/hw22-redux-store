{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","categories","currentCategory","cart","cartOpen","reducer","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","createStore","reducers","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.39c1b946.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n\nexport const UPDATE_CATEGORIES = 'UPDATE_CATEGORIES';\nexport const UPDATE_CURRENT_CATEGORY = 'UPDATE_CURRENT_CATEGORY';\n","import {\n\tUPDATE_PRODUCTS,\n\tADD_TO_CART,\n\tUPDATE_CART_QUANTITY,\n\tREMOVE_FROM_CART,\n\tADD_MULTIPLE_TO_CART,\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n\tCLEAR_CART,\n\tTOGGLE_CART\n} from './actions';\n\nconst initialState = {\n\tproducts: [],\n\tcategories: [],\n\tcurrentCategory: '',\n\tcart: [],\n\tcartOpen: false\n};\n\nexport const reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_PRODUCTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: [ ...action.products ]\n\t\t\t};\n\n\t\tcase ADD_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: [ ...state.cart, action.product ]\n\t\t\t};\n\n\t\tcase ADD_MULTIPLE_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: [ ...state.cart, ...action.products ]\n\t\t\t};\n\n\t\tcase UPDATE_CART_QUANTITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: state.cart.map((product) => {\n\t\t\t\t\tif (action._id === product._id) {\n\t\t\t\t\t\tproduct.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t}\n\t\t\t\t\treturn product;\n\t\t\t\t})\n\t\t\t};\n\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet newState = state.cart.filter((product) => {\n\t\t\t\treturn product._id !== action._id;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: newState.length > 0,\n\t\t\t\tcart: newState\n\t\t\t};\n\n\t\tcase CLEAR_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: false,\n\t\t\t\tcart: []\n\t\t\t};\n\n\t\tcase TOGGLE_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: !state.cartOpen\n\t\t\t};\n\n\t\tcase UPDATE_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [ ...action.categories ]\n\t\t\t};\n\n\t\tcase UPDATE_CURRENT_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentCategory: action.currentCategory\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nexport default createStore(reducers);\n","export function pluralize(name, count) {\n\tif (count === 1) {\n\t\treturn name;\n\t}\n\treturn name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = window.indexedDB.open('shop-shop', 1);\n\t\tlet db, tx, store;\n\t\trequest.onupgradeneeded = function(e) {\n\t\t\tconst db = request.result;\n\t\t\tdb.createObjectStore('products', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('categories', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('cart', { keyPath: '_id' });\n\t\t};\n\n\t\trequest.onerror = function(e) {\n\t\t\tconsole.log('There was an error');\n\t\t};\n\n\t\trequest.onsuccess = function(e) {\n\t\t\tdb = request.result;\n\t\t\ttx = db.transaction(storeName, 'readwrite');\n\t\t\tstore = tx.objectStore(storeName);\n\n\t\t\tdb.onerror = function(e) {\n\t\t\t\tconsole.log('error', e);\n\t\t\t};\n\n\t\t\tswitch (method) {\n\t\t\t\tcase 'put':\n\t\t\t\t\tstore.put(object);\n\t\t\t\t\tresolve(object);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'get':\n\t\t\t\t\tconst all = store.getAll();\n\t\t\t\t\tall.onsuccess = function() {\n\t\t\t\t\t\tresolve(all.result);\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\t\tstore.delete(object._id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('No valid method');\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttx.oncomplete = function() {\n\t\t\t\tdb.close();\n\t\t\t};\n\t\t};\n\t});\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductItem(item) {\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state) => state);\n\n\tconst { image, name, _id, price, quantity } = item;\n\n\tconst { cart } = state;\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: _id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tproduct: { ...item, purchaseQuantity: 1 }\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"card px-1 py-1\">\n\t\t\t<Link to={`/products/${_id}`}>\n\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t<p>{name}</p>\n\t\t\t</Link>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{quantity} {pluralize('item', quantity)} in stock\n\t\t\t\t</div>\n\t\t\t\t<span>${price}</span>\n\t\t\t</div>\n\t\t\t<button onClick={addToCart}>Add to cart</button>\n\t\t</div>\n\t);\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n\tquery getProducts($category: ID) {\n\t\tproducts(category: $category) {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\timage\n\t\t\tcategory {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n\tquery getCheckout($products: [ID]!) {\n\t\tcheckout(products: $products) {\n\t\t\tsession\n\t\t}\n\t}\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n\t{\n\t\tproducts {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CATEGORIES = gql`\n\t{\n\t\tcategories {\n\t\t\t_id\n\t\t\tname\n\t\t}\n\t}\n`;\n\nexport const QUERY_USER = gql`\n\t{\n\t\tuser {\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\torders {\n\t\t\t\t_id\n\t\t\t\tpurchaseDate\n\t\t\t\tproducts {\n\t\t\t\t\t_id\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tquantity\n\t\t\t\t\timage\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state) => state);\n\n\tconst { currentCategory } = state;\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (data) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\tproducts: data.products\n\t\t\t\t});\n\t\t\t\tdata.products.forEach((product) => {\n\t\t\t\t\tidbPromise('products', 'put', product);\n\t\t\t\t});\n\t\t\t} else if (!loading) {\n\t\t\t\tidbPromise('products', 'get').then((products) => {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\t\tproducts: products\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ data, loading, dispatch ]\n\t);\n\n\tfunction filterProducts() {\n\t\tif (!currentCategory) {\n\t\t\treturn state.products;\n\t\t}\n\n\t\treturn state.products.filter((product) => product.category._id === currentCategory);\n\t}\n\n\treturn (\n\t\t<div className=\"my-2\">\n\t\t\t<h2>Our Products:</h2>\n\t\t\t{state.products.length ? (\n\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t{filterProducts().map((product) => (\n\t\t\t\t\t\t<ProductItem\n\t\t\t\t\t\t\tkey={product._id}\n\t\t\t\t\t\t\t_id={product._id}\n\t\t\t\t\t\t\timage={product.image}\n\t\t\t\t\t\t\tname={product.name}\n\t\t\t\t\t\t\tprice={product.price}\n\t\t\t\t\t\t\tquantity={product.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any products yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t</div>\n\t);\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state) => state);\n\n\tconst { categories } = state;\n\n\tconst { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (categoryData) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_CATEGORIES,\n\t\t\t\t\tcategories: categoryData.categories\n\t\t\t\t});\n\t\t\t\tcategoryData.categories.forEach((category) => {\n\t\t\t\t\tidbPromise('categories', 'put', category);\n\t\t\t\t});\n\t\t\t} else if (!loading) {\n\t\t\t\tidbPromise('categories', 'get').then((categories) => {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: UPDATE_CATEGORIES,\n\t\t\t\t\t\tcategories: categories\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ categoryData, loading, dispatch ]\n\t);\n\n\tconst handleClick = (id) => {\n\t\tdispatch({\n\t\t\ttype: UPDATE_CURRENT_CATEGORY,\n\t\t\tcurrentCategory: id\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Choose a Category:</h2>\n\t\t\t{categories.map((item) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={item._id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleClick(item._id);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{item.name}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nconst CartItem = ({ item }) => {\n\tconst dispatch = useDispatch();\n\n\tconst removeFromCart = (item) => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t_id: item._id\n\t\t});\n\t\tidbPromise('cart', 'delete', { ...item });\n\t};\n\n\tconst onChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tif (value === '0') {\n\t\t\tdispatch({\n\t\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t\t_id: item._id\n\t\t\t});\n\t\t\tidbPromise('cart', 'delete', { ...item });\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: item._id,\n\t\t\t\tpurchaseQuantity: parseInt(value)\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"flex-row\">\n\t\t\t<div>\n\t\t\t\t<img src={`/images/${item.image}`} alt=\"\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{item.name}, ${item.price}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>Qty:</span>\n\t\t\t\t\t<input type=\"number\" placeholder=\"1\" value={item.purchaseQuantity} onChange={onChange} />\n\t\t\t\t\t<span role=\"img\" aria-label=\"trash\" onClick={() => removeFromCart(item)}>\n\t\t\t\t\t\t🗑️\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n\tgetProfile() {\n\t\treturn decode(this.getToken());\n\t}\n\n\tloggedIn() {\n\t\t// Checks if there is a saved token and it's still valid\n\t\tconst token = this.getToken();\n\t\treturn !!token && !this.isTokenExpired(token);\n\t}\n\n\tisTokenExpired(token) {\n\t\ttry {\n\t\t\tconst decoded = decode(token);\n\t\t\tif (decoded.exp < Date.now() / 1000) {\n\t\t\t\treturn true;\n\t\t\t} else return false;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetToken() {\n\t\t// Retrieves the user token from localStorage\n\t\treturn localStorage.getItem('id_token');\n\t}\n\n\tlogin(idToken) {\n\t\t// Saves user token to localStorage\n\t\tlocalStorage.setItem('id_token', idToken);\n\n\t\twindow.location.assign('/');\n\t}\n\n\tlogout() {\n\t\t// Clear user token and profile data from localStorage\n\t\tlocalStorage.removeItem('id_token');\n\t\t// this will reload the page and reset the state of the application\n\t\twindow.location.assign('/');\n\t}\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state) => state);\n\tconst [ getCheckout, { data } ] = useLazyQuery(QUERY_CHECKOUT);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (data) {\n\t\t\t\tstripePromise.then((res) => {\n\t\t\t\t\tres.redirectToCheckout({ sessionId: data.checkout.session });\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[ data ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tasync function getCart() {\n\t\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\t\tdispatch({ type: ADD_MULTIPLE_TO_CART, products: [ ...cart ] });\n\t\t\t}\n\n\t\t\tif (!state.cart.length) {\n\t\t\t\tgetCart();\n\t\t\t}\n\t\t},\n\t\t[ state.cart.length, dispatch ]\n\t);\n\n\tfunction toggleCart() {\n\t\tdispatch({ type: TOGGLE_CART });\n\t}\n\n\tfunction calculateTotal() {\n\t\tlet sum = 0;\n\t\tstate.cart.forEach((item) => {\n\t\t\tsum += item.price * item.purchaseQuantity;\n\t\t});\n\t\treturn sum.toFixed(2);\n\t}\n\n\tfunction submitCheckout() {\n\t\tconst productIds = [];\n\n\t\tstate.cart.forEach((item) => {\n\t\t\tfor (let i = 0; i < item.purchaseQuantity; i++) {\n\t\t\t\tproductIds.push(item._id);\n\t\t\t}\n\t\t});\n\n\t\tgetCheckout({\n\t\t\tvariables: { products: productIds }\n\t\t});\n\t}\n\n\tif (!state.cartOpen) {\n\t\treturn (\n\t\t\t<div className=\"cart-closed\" onClick={toggleCart}>\n\t\t\t\t<span role=\"img\" aria-label=\"trash\">\n\t\t\t\t\t🛒\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"cart\">\n\t\t\t<div className=\"close\" onClick={toggleCart}>\n\t\t\t\t[close]\n\t\t\t</div>\n\t\t\t<h2>Shopping Cart</h2>\n\t\t\t{state.cart.length ? (\n\t\t\t\t<div>\n\t\t\t\t\t{state.cart.map((item) => <CartItem key={item._id} item={item} />)}\n\n\t\t\t\t\t<div className=\"flex-row space-between\">\n\t\t\t\t\t\t<strong>Total: ${calculateTotal()}</strong>\n\n\t\t\t\t\t\t{Auth.loggedIn() ? (\n\t\t\t\t\t\t\t<button onClick={submitCheckout}>Checkout</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>(log in to check out)</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>\n\t\t\t\t\t<span role=\"img\" aria-label=\"shocked\">\n\t\t\t\t\t\t😱\n\t\t\t\t\t</span>\n\t\t\t\t\tYou haven't added anything to your cart yet!\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Cart;\n","import React from 'react';\nimport ProductList from '../components/ProductList';\nimport CategoryMenu from '../components/CategoryMenu';\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<CategoryMenu />\n\t\t\t<ProductList />\n\t\t\t<Cart />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n\treturn <div style={{ height: 560, clear: 'both', paddingTop: 120, textAlign: 'center' }}>{children}</div>;\n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport Jumbotron from '../components/Jumbotron';\n\nconst NoMatch = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Jumbotron>\n\t\t\t\t<h1>404 Page Not Found</h1>\n\t\t\t\t<h1>\n\t\t\t\t\t<span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n\t\t\t\t\t\t🙄\n\t\t\t\t\t</span>\n\t\t\t\t</h1>\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n\tmutation login($email: String!, $password: String!) {\n\t\tlogin(email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_ORDER = gql`\n\tmutation addOrder($products: [ID]!) {\n\t\taddOrder(products: $products) {\n\t\t\tpurchaseDate\n\t\t\tproducts {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tcategory {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_USER = gql`\n\tmutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n\t\taddUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n\tconst [ formState, setFormState ] = useState({ email: '', password: '' });\n\tconst [ login, { error } ] = useMutation(LOGIN);\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst mutationResponse = await login({\n\t\t\t\tvariables: { email: formState.email, password: formState.password }\n\t\t\t});\n\t\t\tconst token = mutationResponse.data.login.token;\n\t\t\tAuth.login(token);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container my-1\">\n\t\t\t<Link to=\"/signup\">← Go to Signup</Link>\n\n\t\t\t<h2>Login</h2>\n\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"email\">Email address:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"youremail@test.com\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"pwd\">Password:</label>\n\t\t\t\t\t<input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n\t\t\t\t</div>\n\t\t\t\t{error ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"error-text\">The provided credentials are incorrect</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"flex-row flex-end\">\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n\tconst [ formState, setFormState ] = useState({ email: '', password: '' });\n\tconst [ addUser ] = useMutation(ADD_USER);\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst mutationResponse = await addUser({\n\t\t\tvariables: {\n\t\t\t\temail: formState.email,\n\t\t\t\tpassword: formState.password,\n\t\t\t\tfirstName: formState.firstName,\n\t\t\t\tlastName: formState.lastName\n\t\t\t}\n\t\t});\n\t\tconst token = mutationResponse.data.addUser.token;\n\t\tAuth.login(token);\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"container my-1\">\n\t\t\t<Link to=\"/login\">← Go to Login</Link>\n\n\t\t\t<h2>Signup</h2>\n\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"firstName\">First Name:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"First\"\n\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\ttype=\"firstName\"\n\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"lastName\">Last Name:</label>\n\t\t\t\t\t<input placeholder=\"Last\" name=\"lastName\" type=\"lastName\" id=\"lastName\" onChange={handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"email\">Email:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"youremail@test.com\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row space-between my-2\">\n\t\t\t\t\t<label htmlFor=\"pwd\">Password:</label>\n\t\t\t\t\t<input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-row flex-end\">\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Signup;\n","import React from 'react';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n\tfunction showNavigation() {\n\t\tif (Auth.loggedIn()) {\n\t\t\treturn (\n\t\t\t\t<ul className=\"flex-row\">\n\t\t\t\t\t<li className=\"mx-1\">\n\t\t\t\t\t\t<Link to=\"/orderHistory\">Order History</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"mx-1\">\n\t\t\t\t\t\t{/* this is not using the Link component to logout or user and then refresh the application to the start */}\n\t\t\t\t\t\t<a href=\"/\" onClick={() => Auth.logout()}>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<ul className=\"flex-row\">\n\t\t\t\t\t<li className=\"mx-1\">\n\t\t\t\t\t\t<Link to=\"/signup\">Signup</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"mx-1\">\n\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<header className=\"flex-row px-1\">\n\t\t\t<h1>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<span role=\"img\" aria-label=\"shopping bag\">\n\t\t\t\t\t\t🛍️\n\t\t\t\t\t</span>\n\t\t\t\t\t-Shop-Shop\n\t\t\t\t</Link>\n\t\t\t</h1>\n\n\t\t\t<nav>{showNavigation()}</nav>\n\t\t</header>\n\t);\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n\tconst [ addOrder ] = useMutation(ADD_ORDER);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tasync function saveOrder() {\n\t\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\t\tconst products = cart.map((item) => item._id);\n\n\t\t\t\tif (products.length) {\n\t\t\t\t\tconst { data } = await addOrder({ variables: { products } });\n\t\t\t\t\tconst productData = data.addOrder.products;\n\n\t\t\t\t\tproductData.forEach((item) => {\n\t\t\t\t\t\tidbPromise('cart', 'delete', item);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\twindow.location.assign('/');\n\t\t\t\t}, 3000);\n\t\t\t}\n\n\t\t\tsaveOrder();\n\t\t},\n\t\t[ addOrder ]\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<Jumbotron>\n\t\t\t\t<h1>Success!</h1>\n\t\t\t\t<h2>Thank you for your purchase!</h2>\n\t\t\t\t<h2>You will now be redirected to the home page</h2>\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n\turi: '/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('id_token');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : ''\n\t\t}\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache()\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t\t\t\t\t<Route exact path=\"/success\" component={Success} />\n\t\t\t\t\t\t\t<Route exact path=\"/orderHistory\" component={OrderHistory} />\n\t\t\t\t\t\t\t<Route exact path=\"/products/:id\" component={Detail} />\n\t\t\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Provider>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}